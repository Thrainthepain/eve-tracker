# Dynamic Nginx configuration based on protocol

# HTTP configuration for Let's Encrypt challenges or standard HTTP
server {
    listen 80;
    server_name ${FULL_DOMAIN} www.${FULL_DOMAIN};

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # If HTTPS is enabled, redirect all HTTP traffic to HTTPS
    set $redirect_to_https 0;
    if ($SERVER_PROTOCOL = "https") {
        set $redirect_to_https 1;
    }
    if ($redirect_to_https = 1) {
        return 301 https://$host$request_uri;
    }

    # Only use these locations if in HTTP mode
    location / {
        root /usr/share/nginx/html;
        index index.html index.htm;
        try_files $uri $uri/ /index.html;
    }

    # Proxy API requests to the backend
    location /api {
        proxy_pass http://backend:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}

# HTTPS server block - only included when using HTTPS
server {
    listen 443 ssl;
    server_name ${FULL_DOMAIN} www.${FULL_DOMAIN};

    # Certificates based on SSL_MODE
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_stapling on;
    ssl_stapling_verify on;

    # Frontend static files
    location / {
        root /usr/share/nginx/html;
        index index.html index.htm;
        try_files $uri $uri/ /index.html;
    }

    # Proxy API requests to the backend
    location /api {
        proxy_pass http://backend:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}