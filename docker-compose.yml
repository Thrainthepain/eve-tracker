version: '3.8'

services:
  mongodb:
    image: mongo:4.4
    container_name: eve-tracker-mongodb
    volumes:
      - mongo_data:/data/db
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME:-root}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD:-password}
      # Add timezone setting for Ubuntu
      - TZ=UTC
    networks:
      - eve-network
    # Added healthcheck for Ubuntu compatibility
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: eve-tracker-backend
    restart: unless-stopped
    depends_on:
      - mongodb
    environment:
      - PORT=${PORT:-5000}
      - MONGO_URI=${MONGO_URI}
      - CLIENT_URL=${CLIENT_URL:-http://localhost}
      - SERVER_URL=${SERVER_URL:-http://localhost:5000}
      - EVE_CLIENT_ID=${EVE_CLIENT_ID}
      - EVE_CLIENT_SECRET=${EVE_CLIENT_SECRET}
      - SESSION_SECRET=${SESSION_SECRET}
      - NODE_ENV=${NODE_ENV:-production}
      - WEBSITE_NAME=${WEBSITE_NAME}
      # Ubuntu TimeZone Support
      - TZ=UTC
    ports:
      - "${BACKEND_PORT:-5000}:${PORT:-5000}"
    volumes:
      - ./logs:/app/logs
      - ./backups:/app/backups
      - ./uploads:/app/uploads
    networks:
      - eve-network
    # Added healthcheck for Ubuntu compatibility
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:${PORT:-5000}/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  frontend:
    build:
      context: .
      dockerfile: client/Dockerfile
    container_name: eve-tracker-frontend
    restart: unless-stopped
    depends_on:
      - backend
    environment:
      - SERVER_PROTOCOL=${SERVER_PROTOCOL:-http}
      - FULL_DOMAIN=${FULL_DOMAIN:-localhost}
      - BACKEND_PORT=${BACKEND_PORT:-5000}
      - SSL_MODE=${SSL_MODE:-skip}
      # Ubuntu TimeZone Support
      - TZ=UTC
    ports:
      - "${FRONTEND_PORT:-80}:80"
      # FIXED: Properly configure HTTPS port mapping
      - ${SERVER_PROTOCOL:-http}:${SERVER_PROTOCOL:-http}:443:443
    networks:
      - eve-network
    volumes:
      - ./client/public:/usr/share/nginx/html/custom-assets
      - ./nginx.conf:/etc/nginx/conf.d/default.conf.template
      - ssl_certs:/etc/nginx/ssl
      - ./certbot/www:/var/www/certbot
    # Added healthcheck for Ubuntu compatibility
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 5s

  # Add SSL companion container if using Let's Encrypt
  certbot:
    image: certbot/certbot
    container_name: eve-tracker-certbot
    profiles: ["ssl"]
    environment:
      - SSL_MODE=${SSL_MODE:-skip}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL:-admin@example.com}
      - DOMAIN=${FULL_DOMAIN:-localhost}
    volumes:
      - ssl_certs:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: >
      sh -c "if [ \"$${SSL_MODE}\" = \"letsencrypt\" ]; then 
              certbot certonly --webroot -w /var/www/certbot --email $${LETSENCRYPT_EMAIL} --agree-tos --no-eff-email -d $${DOMAIN} || echo \"SSL setup failed or not needed\"; 
            else 
              echo \"SSL not configured for automatic setup\"; 
            fi"
    depends_on:
      - frontend

networks:
  eve-network:
    driver: bridge

volumes:
  mongo_data:
  ssl_certs:
